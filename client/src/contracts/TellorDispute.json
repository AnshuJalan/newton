{
  "contractName": "TellorDispute",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "_result",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_reportedMiner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_reportingParty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "DisputeVoteTallied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_miner",
          "type": "address"
        }
      ],
      "name": "NewDispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newTellor",
          "type": "address"
        }
      ],
      "name": "NewTellorAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_position",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "Voted",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"_result\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_reportedMiner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_reportingParty\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"DisputeVoteTallied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"NewDispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newTellor\",\"type\":\"address\"}],\"name\":\"NewTellorAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_position\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"Voted\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contains the methods related to disputes. Tellor.sol references this library for function's logic.\",\"methods\":{\"beginDispute(TellorStorage.TellorStorageStruct storage,uint256,uint256,uint256)\":{\"details\":\"Helps initialize a dispute by assigning it a disputeId when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the invalidated value information to POS voting\",\"params\":{\"_minerIndex\":\"the index of the miner that submitted the value being disputed. Since each official value requires 5 miners to submit a value.\",\"_requestId\":\"being disputed\",\"_timestamp\":\"being disputed\"}}},\"title\":\"Tellor Dispute\"},\"userdoc\":{\"methods\":{},\"notice\":\"***********************************TEST LIBRARY***************************************\"}},\"settings\":{\"compilationTarget\":{\"usingtellor/contracts/libraries/TellorDispute.sol\":\"TellorDispute\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"usingtellor/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x62b9162f069143cfced67a222b466d7635f16dff23357c8ebdf83f133a94d38e\",\"urls\":[\"bzz-raw://37784d9a64bf6fcbde2c7dbafa0d32a6e44d63fd38505d6d0b98fdb199a64cd3\",\"dweb:/ipfs/QmZ5ogZNJ2efUQhTsrnG4T3oYUPn5PTjdbsyFsXGm7XUF1\"]},\"usingtellor/contracts/libraries/TellorDispute.sol\":{\"keccak256\":\"0x98255437065d395c075e710a49723c28358cc937720c262562b0772a38e39e49\",\"urls\":[\"bzz-raw://b598e276a177a93d239d34269e20f9c6001fa3b106318bc89eaa36f976a12f5a\",\"dweb:/ipfs/QmVuGmBEAvttaht32KCm8yDpoXBRSQmNGen9cXnyfmhHEC\"]},\"usingtellor/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0x54607e8b302ce32f7311be680dbcfdbb6d1054d5091f47bcc0544237b42d483c\",\"urls\":[\"bzz-raw://67debccd700171ddcc9d0296928297ce29b2235fd07f943012ecde1051408328\",\"dweb:/ipfs/QmTat7EPRWCrBA7Ba98uKeHRqW8dhz798GUx2n7iGbWEfo\"]},\"usingtellor/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0xb9ad394b89a6314b8b8c1e331fcde96f85635a1428b7c79848a9b39d5879cbe4\",\"urls\":[\"bzz-raw://baf25c0ad41fd767d7e8c589ecb0566f4a9b41deb898cfadabec60387c316a8d\",\"dweb:/ipfs/QmT67VEbydbsKrszcjwNAG1dQHogzmgMxm7RHr38MPeYDQ\"]}},\"version\":1}",
  "bytecode": "0x610188610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063ca9a4ea51461003a575b600080fd5b81801561004657600080fd5b506100916004803603608081101561005d57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610093565b005b60028114156100df576001846048016000858152602001908152602001600020600701600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8260017feceec1aebf67772b2440120c4b4dc913a1fe1b865509219f9456785c23b9da648433604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a35050505056fea265627a7a7231582041c62ec7fc3b07a9945485e62b984ac96ad6ce490a71666a9b2b226b33fe8ec464736f6c63430005100032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063ca9a4ea51461003a575b600080fd5b81801561004657600080fd5b506100916004803603608081101561005d57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610093565b005b60028114156100df576001846048016000858152602001908152602001600020600701600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8260017feceec1aebf67772b2440120c4b4dc913a1fe1b865509219f9456785c23b9da648433604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a35050505056fea265627a7a7231582041c62ec7fc3b07a9945485e62b984ac96ad6ce490a71666a9b2b226b33fe8ec464736f6c63430005100032",
  "sourceMap": "351:13732:11:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "351:13732:11:-;;;;;;;;;;;;;;;;;;;;;;;;1502:3450;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1502:3450:11;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1502:3450:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4732:1;4717:11;:16;4713:109;;;4806:4;4750;:19;;:31;4770:10;4750:31;;;;;;;;;;;:41;;:53;4792:10;4750:53;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;4713:109;4909:10;4906:1;4895:49;4921:10;4933;4895:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:3450;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./TellorStorage.sol\";\r\nimport \"./TellorTransfer.sol\";\r\n//import \"./SafeMath.sol\";\r\n\r\n/**\r\n***********************************TEST LIBRARY***************************************\r\n* @title Tellor Dispute\r\n* @dev Contains the methods related to disputes. Tellor.sol references this library for function's logic.\r\n*/\r\n\r\nlibrary TellorDispute {\r\n    using SafeMath for uint256;\r\n    using SafeMath for int256;\r\n\r\n    //emitted when a new dispute is initialized\r\n    event NewDispute(uint256 indexed _disputeId, uint256 indexed _requestId, uint256 _timestamp, address _miner);\r\n    //emitted when a new vote happens\r\n    event Voted(uint256 indexed _disputeID, bool _position, address indexed _voter);\r\n    //emitted upon dispute tally\r\n    event DisputeVoteTallied(uint256 indexed _disputeID, int256 _result, address indexed _reportedMiner, address _reportingParty, bool _active);\r\n    event NewTellorAddress(address _newTellor); //emmited when a proposed fork is voted true\r\n\r\n    /*Functions*/\r\n\r\n    /**\r\n    * @dev Helps initialize a dispute by assigning it a disputeId\r\n    * when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\r\n    * invalidated value information to POS voting\r\n    * @param _requestId being disputed\r\n    * @param _timestamp being disputed\r\n    * @param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\r\n    * requires 5 miners to submit a value.\r\n    */\r\n    function beginDispute(TellorStorage.TellorStorageStruct storage self, uint256 _requestId, uint256 _timestamp, uint256 _minerIndex) public {\r\n        // TellorStorage.Request storage _request = self.requestDetails[_requestId];\r\n        // //require that no more than a day( (24 hours * 60 minutes)/10minutes=144 blocks) has gone by since the value was \"mined\"\r\n        // require(now - _timestamp <= 1 days, \"The value was mined more than a day ago\");\r\n        // require(_request.minedBlockNum[_timestamp] > 0, \"Mined block is 0\");\r\n        // require(_minerIndex < 5, \"Miner index is wrong\");\r\n\r\n        // //_miner is the miner being disputed. For every mined value 5 miners are saved in an array and the _minerIndex\r\n        // //provided by the party initiating the dispute\r\n        // address _miner = _request.minersByValue[_timestamp][_minerIndex];\r\n        // bytes32 _hash = keccak256(abi.encodePacked(_miner, _requestId, _timestamp));\r\n\r\n        // //Ensures that a dispute is not already open for the that miner, requestId and timestamp\r\n        // require(self.disputeIdByDisputeHash[_hash] == 0, \"Dispute is already open\");\r\n        // TellorTransfer.doTransfer(self, msg.sender, address(this), self.uintVars[keccak256(\"disputeFee\")]);\r\n\r\n        // //Increase the dispute count by 1\r\n        // self.uintVars[keccak256(\"disputeCount\")] = self.uintVars[keccak256(\"disputeCount\")] + 1;\r\n\r\n        // //Sets the new disputeCount as the disputeId\r\n        // uint256 disputeId = self.uintVars[keccak256(\"disputeCount\")];\r\n\r\n        // //maps the dispute hash to the disputeId\r\n        // self.disputeIdByDisputeHash[_hash] = disputeId;\r\n        // //maps the dispute to the Dispute struct\r\n        // self.disputesById[disputeId] = TellorStorage.Dispute({\r\n        //     hash: _hash,\r\n        //     isPropFork: false,\r\n        //     reportedMiner: _miner,\r\n        //     reportingParty: msg.sender,\r\n        //     proposedForkAddress: address(0),\r\n        //     executed: false,\r\n        //     disputeVotePassed: false,\r\n        //     tally: 0\r\n        // });\r\n\r\n        // //Saves all the dispute variables for the disputeId\r\n        // self.disputesById[disputeId].disputeUintVars[keccak256(\"requestId\")] = _requestId;\r\n        // self.disputesById[disputeId].disputeUintVars[keccak256(\"timestamp\")] = _timestamp;\r\n        // self.disputesById[disputeId].disputeUintVars[keccak256(\"value\")] = _request.valuesByTimestamp[_timestamp][_minerIndex];\r\n        // self.disputesById[disputeId].disputeUintVars[keccak256(\"minExecutionDate\")] = now + 7 days;\r\n        // self.disputesById[disputeId].disputeUintVars[keccak256(\"blockNumber\")] = block.number;\r\n        // self.disputesById[disputeId].disputeUintVars[keccak256(\"minerSlot\")] = _minerIndex;\r\n        // self.disputesById[disputeId].disputeUintVars[keccak256(\"fee\")] = self.uintVars[keccak256(\"disputeFee\")];\r\n\r\n        //Values are sorted as they come in and the official value is the median of the first five\r\n        //So the \"official value\" miner is always minerIndex==2. If the official value is being\r\n        //disputed, it sets its status to inDispute(currentStatus = 3) so that users are made aware it is under dispute\r\n        if (_minerIndex == 2) {\r\n            self.requestDetails[_requestId].inDispute[_timestamp] = true;\r\n        }\r\n        // self.stakerDetails[_miner].currentStatus = 3;\r\n        emit NewDispute(1, _requestId, _timestamp, msg.sender);\r\n    }\r\n\r\n    // /**\r\n    // * @dev Allows token holders to vote\r\n    // * @param _disputeId is the dispute id\r\n    // * @param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)\r\n    // */\r\n    // function vote(TellorStorage.TellorStorageStruct storage self, uint256 _disputeId, bool _supportsDispute) public {\r\n    //     TellorStorage.Dispute storage disp = self.disputesById[_disputeId];\r\n\r\n    //     //Get the voteWeight or the balance of the user at the time/blockNumber the disupte began\r\n    //     uint256 voteWeight = TellorTransfer.balanceOfAt(self, msg.sender, disp.disputeUintVars[keccak256(\"blockNumber\")]);\r\n\r\n    //     //Require that the msg.sender has not voted\r\n    //     require(disp.voted[msg.sender] != true, \"Sender has already voted\");\r\n\r\n    //     //Requre that the user had a balance >0 at time/blockNumber the disupte began\r\n    //     require(voteWeight > 0, \"User balance is 0\");\r\n\r\n    //     //ensures miners that are under dispute cannot vote\r\n    //     require(self.stakerDetails[msg.sender].currentStatus != 3, \"Miner is under dispute\");\r\n\r\n    //     //Update user voting status to true\r\n    //     disp.voted[msg.sender] = true;\r\n\r\n    //     //Update the number of votes for the dispute\r\n    //     disp.disputeUintVars[keccak256(\"numberOfVotes\")] += 1;\r\n\r\n    //     //If the user supports the dispute increase the tally for the dispute by the voteWeight\r\n    //     //otherwise decrease it\r\n    //     if (_supportsDispute) {\r\n    //         disp.tally = disp.tally.add(int256(voteWeight));\r\n    //     } else {\r\n    //         disp.tally = disp.tally.sub(int256(voteWeight));\r\n    //     }\r\n\r\n    //     //Let the network know the user has voted on the dispute and their casted vote\r\n    //     emit Voted(_disputeId, _supportsDispute, msg.sender);\r\n    // }\r\n\r\n    // /**\r\n    // * @dev tallies the votes.\r\n    // * @param _disputeId is the dispute id\r\n    // */\r\n    // function tallyVotes(TellorStorage.TellorStorageStruct storage self, uint256 _disputeId) public {\r\n    //     TellorStorage.Dispute storage disp = self.disputesById[_disputeId];\r\n    //     TellorStorage.Request storage _request = self.requestDetails[disp.disputeUintVars[keccak256(\"requestId\")]];\r\n\r\n    //     //Ensure this has not already been executed/tallied\r\n    //     require(disp.executed == false, \"Dispute has been already executed\");\r\n\r\n    //     //Ensure the time for voting has elapsed\r\n    //     require(now > disp.disputeUintVars[keccak256(\"minExecutionDate\")], \"Time for voting haven't elapsed\");\r\n\r\n\r\n    //     //If the vote is not a proposed fork\r\n    //     if (disp.isPropFork == false) {\r\n    //         TellorStorage.StakeInfo storage stakes = self.stakerDetails[disp.reportedMiner];\r\n    //         //If the vote for disputing a value is succesful(disp.tally >0) then unstake the reported\r\n    //         // miner and transfer the stakeAmount and dispute fee to the reporting party\r\n    //         if (disp.tally > 0) {\r\n\r\n    //             //if reported miner stake has not been slashed yet, slash them and return the fee to reporting party\r\n    //             if (stakes.currentStatus == 3) {\r\n    //                 //Changing the currentStatus and startDate unstakes the reported miner and allows for the\r\n    //                 //transfer of the stakeAmount\r\n    //                 stakes.currentStatus = 0;\r\n    //                 stakes.startDate = now - (now % 86400);\r\n     \r\n    //                 //Decreases the stakerCount since the miner's stake is being slashed\r\n    //                 self.uintVars[keccak256(\"stakerCount\")]--;\r\n    //                 updateDisputeFee(self);\r\n     \r\n    //                 //Transfers the StakeAmount from the reporded miner to the reporting party\r\n    //                 TellorTransfer.doTransfer(self, disp.reportedMiner, disp.reportingParty, self.uintVars[keccak256(\"stakeAmount\")]);\r\n     \r\n    //                 //Returns the dispute fee to the reportingParty\r\n    //                 TellorTransfer.doTransfer(self, address(this), disp.reportingParty, disp.disputeUintVars[keccak256(\"fee\")]);\r\n                    \r\n    //             //if reported miner stake was already slashed, return the fee to other reporting paties\r\n    //             } else{\r\n    //                 TellorTransfer.doTransfer(self, address(this), disp.reportingParty, disp.disputeUintVars[keccak256(\"fee\")]);\r\n    //             }\r\n\r\n    //             //Set the dispute state to passed/true\r\n    //             disp.disputeVotePassed = true;\r\n\r\n\r\n    //             //If the dispute was succeful(miner found guilty) then update the timestamp value to zero\r\n    //             //so that users don't use this datapoint\r\n    //             if (_request.inDispute[disp.disputeUintVars[keccak256(\"timestamp\")]] == true) {\r\n    //                 _request.finalValues[disp.disputeUintVars[keccak256(\"timestamp\")]] = 0;\r\n    //             }\r\n    //             //If the vote for disputing a value is unsuccesful then update the miner status from being on\r\n    //             //dispute(currentStatus=3) to staked(currentStatus =1) and tranfer the dispute fee to the miner\r\n    //         } else {\r\n    //             //Update the miner's current status to staked(currentStatus = 1)\r\n    //             stakes.currentStatus = 1;\r\n    //             //tranfer the dispute fee to the miner\r\n    //             TellorTransfer.doTransfer(self, address(this), disp.reportedMiner, disp.disputeUintVars[keccak256(\"fee\")]);\r\n    //             if (_request.inDispute[disp.disputeUintVars[keccak256(\"timestamp\")]] == true) {\r\n    //                 _request.inDispute[disp.disputeUintVars[keccak256(\"timestamp\")]] = false;\r\n    //             }\r\n    //         }\r\n    //         //If the vote is for a proposed fork require a 10% quorum before executing the update to the new tellor contract address\r\n    //     } else {\r\n    //         if (disp.tally > 0 && uint(disp.tally) >= ((self.uintVars[keccak256(\"total_supply\")] * 10) / 100)) {\r\n    //             self.addressVars[keccak256(\"tellorContract\")] = disp.proposedForkAddress;\r\n    //             disp.disputeVotePassed = true;\r\n    //             emit NewTellorAddress(disp.proposedForkAddress);\r\n    //         }\r\n    //     }\r\n\r\n    //     //update the dispute status to executed\r\n    //     disp.executed = true;\r\n    //     emit DisputeVoteTallied(_disputeId, disp.tally, disp.reportedMiner, disp.reportingParty, disp.disputeVotePassed);\r\n    // }\r\n\r\n    // /**\r\n    // * @dev Allows for a fork to be proposed\r\n    // * @param _propNewTellorAddress address for new proposed Tellor\r\n    // */\r\n    // function proposeFork(TellorStorage.TellorStorageStruct storage self, address _propNewTellorAddress) public {\r\n    //     bytes32 _hash = keccak256(abi.encodePacked(_propNewTellorAddress));\r\n    //     require(self.disputeIdByDisputeHash[_hash] == 0, \"\");\r\n    //     TellorTransfer.doTransfer(self, msg.sender, address(this), self.uintVars[keccak256(\"disputeFee\")]); //This is the fork fee\r\n    //     self.uintVars[keccak256(\"disputeCount\")]++;\r\n    //     uint256 disputeId = self.uintVars[keccak256(\"disputeCount\")];\r\n    //     self.disputeIdByDisputeHash[_hash] = disputeId;\r\n    //     self.disputesById[disputeId] = TellorStorage.Dispute({\r\n    //         hash: _hash,\r\n    //         isPropFork: true,\r\n    //         reportedMiner: msg.sender,\r\n    //         reportingParty: msg.sender,\r\n    //         proposedForkAddress: _propNewTellorAddress,\r\n    //         executed: false,\r\n    //         disputeVotePassed: false,\r\n    //         tally: 0\r\n    //     });\r\n    //     self.disputesById[disputeId].disputeUintVars[keccak256(\"blockNumber\")] = block.number;\r\n    //     self.disputesById[disputeId].disputeUintVars[keccak256(\"fee\")] = self.uintVars[keccak256(\"disputeFee\")];\r\n    //     self.disputesById[disputeId].disputeUintVars[keccak256(\"minExecutionDate\")] = now + 7 days;\r\n    // }\r\n\r\n    // /**\r\n    // * @dev this function allows the dispute fee to fluctuate based on the number of miners on the system.\r\n    // * The floor for the fee is 15e18.\r\n    // */\r\n    // function updateDisputeFee(TellorStorage.TellorStorageStruct storage self) public {\r\n    //     //if the number of staked miners divided by the target count of staked miners is less than 1\r\n    //     if ((self.uintVars[keccak256(\"stakerCount\")] * 1000) / self.uintVars[keccak256(\"targetMiners\")] < 1000) {\r\n    //         //Set the dispute fee at stakeAmt * (1- stakerCount/targetMiners)\r\n    //         //or at the its minimum of 15e18\r\n    //         self.uintVars[keccak256(\"disputeFee\")] = SafeMath.max(\r\n    //             15e18,\r\n    //             self.uintVars[keccak256(\"stakeAmount\")].mul(\r\n    //                 1000 - (self.uintVars[keccak256(\"stakerCount\")] * 1000) / self.uintVars[keccak256(\"targetMiners\")]\r\n    //             ) /\r\n    //                 1000\r\n    //         );\r\n    //     } else {\r\n    //         //otherwise set the dispute fee at 15e18 (the floor/minimum fee allowed)\r\n    //         self.uintVars[keccak256(\"disputeFee\")] = 15e18;\r\n    //     }\r\n    // }\r\n}",
  "sourcePath": "usingtellor\\contracts\\libraries\\TellorDispute.sol",
  "ast": {
    "absolutePath": "usingtellor/contracts/libraries/TellorDispute.sol",
    "exportedSymbols": {
      "TellorDispute": [
        3084
      ]
    },
    "id": 3085,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3005,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorStorage.sol",
        "file": "./TellorStorage.sol",
        "id": 3006,
        "nodeType": "ImportDirective",
        "scope": 3085,
        "sourceUnit": 4763,
        "src": "27:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorTransfer.sol",
        "file": "./TellorTransfer.sol",
        "id": 3007,
        "nodeType": "ImportDirective",
        "scope": 3085,
        "sourceUnit": 5270,
        "src": "58:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "***********************************TEST LIBRARY***************************************\n@title Tellor Dispute\n@dev Contains the methods related to disputes. Tellor.sol references this library for function's logic.",
        "fullyImplemented": true,
        "id": 3084,
        "linearizedBaseContracts": [
          3084
        ],
        "name": "TellorDispute",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3010,
            "libraryName": {
              "contractScope": null,
              "id": 3008,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3003,
              "src": "386:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3003",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "380:27:11",
            "typeName": {
              "id": 3009,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3013,
            "libraryName": {
              "contractScope": null,
              "id": 3011,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3003,
              "src": "419:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3003",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "413:26:11",
            "typeName": {
              "id": 3012,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "432:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3023,
            "name": "NewDispute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3015,
                  "indexed": true,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "513:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3017,
                  "indexed": true,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "541:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3019,
                  "indexed": false,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "569:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3021,
                  "indexed": false,
                  "name": "_miner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "589:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:92:11"
            },
            "src": "496:109:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3031,
            "name": "Voted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3025,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3031,
                  "src": "662:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3027,
                  "indexed": false,
                  "name": "_position",
                  "nodeType": "VariableDeclaration",
                  "scope": 3031,
                  "src": "690:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3026,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3029,
                  "indexed": true,
                  "name": "_voter",
                  "nodeType": "VariableDeclaration",
                  "scope": 3031,
                  "src": "706:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "661:68:11"
            },
            "src": "650:80:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3043,
            "name": "DisputeVoteTallied",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3033,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "795:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3035,
                  "indexed": false,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "823:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3034,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3037,
                  "indexed": true,
                  "name": "_reportedMiner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "839:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3039,
                  "indexed": false,
                  "name": "_reportingParty",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "871:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3041,
                  "indexed": false,
                  "name": "_active",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "896:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "794:115:11"
            },
            "src": "770:140:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3047,
            "name": "NewTellorAddress",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3045,
                  "indexed": false,
                  "name": "_newTellor",
                  "nodeType": "VariableDeclaration",
                  "scope": 3047,
                  "src": "939:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "938:20:11"
            },
            "src": "916:43:11"
          },
          {
            "body": {
              "id": 3082,
              "nodeType": "Block",
              "src": "1640:3312:11",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3058,
                      "name": "_minerIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3055,
                      "src": "4717:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 3059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4732:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "4717:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3073,
                  "nodeType": "IfStatement",
                  "src": "4713:109:11",
                  "trueBody": {
                    "id": 3072,
                    "nodeType": "Block",
                    "src": "4735:87:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3061,
                                    "name": "self",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3049,
                                    "src": "4750:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TellorStorageStruct_$4761_storage_ptr",
                                      "typeString": "struct TellorStorage.TellorStorageStruct storage pointer"
                                    }
                                  },
                                  "id": 3064,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "requestDetails",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4752,
                                  "src": "4750:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$4694_storage_$",
                                    "typeString": "mapping(uint256 => struct TellorStorage.Request storage ref)"
                                  }
                                },
                                "id": 3065,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 3063,
                                  "name": "_requestId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3051,
                                  "src": "4770:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4750:31:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Request_$4694_storage",
                                  "typeString": "struct TellorStorage.Request storage ref"
                                }
                              },
                              "id": 3066,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "inDispute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4681,
                              "src": "4750:41:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 3068,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3067,
                              "name": "_timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "4792:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4750:53:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4806:4:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4750:60:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3071,
                        "nodeType": "ExpressionStatement",
                        "src": "4750:60:11"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 3075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4906:1:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "id": 3076,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3051,
                        "src": "4909:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3077,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3053,
                        "src": "4921:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3078,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5997,
                          "src": "4933:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4933:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3074,
                      "name": "NewDispute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "4895:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address)"
                      }
                    },
                    "id": 3080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4895:49:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3081,
                  "nodeType": "EmitStatement",
                  "src": "4890:54:11"
                }
              ]
            },
            "documentation": "@dev Helps initialize a dispute by assigning it a disputeId\nwhen a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\ninvalidated value information to POS voting\n@param _requestId being disputed\n@param _timestamp being disputed\n@param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\nrequires 5 miners to submit a value.",
            "id": 3083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3049,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "1524:46:11",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TellorStorageStruct_$4761_storage_ptr",
                    "typeString": "struct TellorStorage.TellorStorageStruct"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3048,
                    "name": "TellorStorage.TellorStorageStruct",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4761,
                    "src": "1524:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TellorStorageStruct_$4761_storage_ptr",
                      "typeString": "struct TellorStorage.TellorStorageStruct"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3051,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "1572:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3053,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "1592:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3055,
                  "name": "_minerIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "1612:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1523:109:11"
            },
            "returnParameters": {
              "id": 3057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:0:11"
            },
            "scope": 3084,
            "src": "1502:3450:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3085,
        "src": "351:13732:11"
      }
    ],
    "src": "0:14083:11"
  },
  "legacyAST": {
    "absolutePath": "usingtellor/contracts/libraries/TellorDispute.sol",
    "exportedSymbols": {
      "TellorDispute": [
        3084
      ]
    },
    "id": 3085,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3005,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorStorage.sol",
        "file": "./TellorStorage.sol",
        "id": 3006,
        "nodeType": "ImportDirective",
        "scope": 3085,
        "sourceUnit": 4763,
        "src": "27:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorTransfer.sol",
        "file": "./TellorTransfer.sol",
        "id": 3007,
        "nodeType": "ImportDirective",
        "scope": 3085,
        "sourceUnit": 5270,
        "src": "58:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "***********************************TEST LIBRARY***************************************\n@title Tellor Dispute\n@dev Contains the methods related to disputes. Tellor.sol references this library for function's logic.",
        "fullyImplemented": true,
        "id": 3084,
        "linearizedBaseContracts": [
          3084
        ],
        "name": "TellorDispute",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3010,
            "libraryName": {
              "contractScope": null,
              "id": 3008,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3003,
              "src": "386:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3003",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "380:27:11",
            "typeName": {
              "id": 3009,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3013,
            "libraryName": {
              "contractScope": null,
              "id": 3011,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3003,
              "src": "419:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3003",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "413:26:11",
            "typeName": {
              "id": 3012,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "432:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3023,
            "name": "NewDispute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3015,
                  "indexed": true,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "513:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3017,
                  "indexed": true,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "541:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3019,
                  "indexed": false,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "569:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3021,
                  "indexed": false,
                  "name": "_miner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "589:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:92:11"
            },
            "src": "496:109:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3031,
            "name": "Voted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3025,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3031,
                  "src": "662:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3027,
                  "indexed": false,
                  "name": "_position",
                  "nodeType": "VariableDeclaration",
                  "scope": 3031,
                  "src": "690:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3026,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3029,
                  "indexed": true,
                  "name": "_voter",
                  "nodeType": "VariableDeclaration",
                  "scope": 3031,
                  "src": "706:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "661:68:11"
            },
            "src": "650:80:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3043,
            "name": "DisputeVoteTallied",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3033,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "795:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3035,
                  "indexed": false,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "823:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3034,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3037,
                  "indexed": true,
                  "name": "_reportedMiner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "839:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3039,
                  "indexed": false,
                  "name": "_reportingParty",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "871:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3041,
                  "indexed": false,
                  "name": "_active",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "896:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "794:115:11"
            },
            "src": "770:140:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3047,
            "name": "NewTellorAddress",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3045,
                  "indexed": false,
                  "name": "_newTellor",
                  "nodeType": "VariableDeclaration",
                  "scope": 3047,
                  "src": "939:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "938:20:11"
            },
            "src": "916:43:11"
          },
          {
            "body": {
              "id": 3082,
              "nodeType": "Block",
              "src": "1640:3312:11",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3058,
                      "name": "_minerIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3055,
                      "src": "4717:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 3059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4732:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "4717:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3073,
                  "nodeType": "IfStatement",
                  "src": "4713:109:11",
                  "trueBody": {
                    "id": 3072,
                    "nodeType": "Block",
                    "src": "4735:87:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3061,
                                    "name": "self",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3049,
                                    "src": "4750:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TellorStorageStruct_$4761_storage_ptr",
                                      "typeString": "struct TellorStorage.TellorStorageStruct storage pointer"
                                    }
                                  },
                                  "id": 3064,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "requestDetails",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4752,
                                  "src": "4750:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$4694_storage_$",
                                    "typeString": "mapping(uint256 => struct TellorStorage.Request storage ref)"
                                  }
                                },
                                "id": 3065,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 3063,
                                  "name": "_requestId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3051,
                                  "src": "4770:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4750:31:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Request_$4694_storage",
                                  "typeString": "struct TellorStorage.Request storage ref"
                                }
                              },
                              "id": 3066,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "inDispute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4681,
                              "src": "4750:41:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 3068,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3067,
                              "name": "_timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "4792:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4750:53:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4806:4:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4750:60:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3071,
                        "nodeType": "ExpressionStatement",
                        "src": "4750:60:11"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 3075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4906:1:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "id": 3076,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3051,
                        "src": "4909:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3077,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3053,
                        "src": "4921:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3078,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5997,
                          "src": "4933:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4933:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3074,
                      "name": "NewDispute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "4895:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address)"
                      }
                    },
                    "id": 3080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4895:49:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3081,
                  "nodeType": "EmitStatement",
                  "src": "4890:54:11"
                }
              ]
            },
            "documentation": "@dev Helps initialize a dispute by assigning it a disputeId\nwhen a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\ninvalidated value information to POS voting\n@param _requestId being disputed\n@param _timestamp being disputed\n@param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\nrequires 5 miners to submit a value.",
            "id": 3083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3049,
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "1524:46:11",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TellorStorageStruct_$4761_storage_ptr",
                    "typeString": "struct TellorStorage.TellorStorageStruct"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3048,
                    "name": "TellorStorage.TellorStorageStruct",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4761,
                    "src": "1524:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TellorStorageStruct_$4761_storage_ptr",
                      "typeString": "struct TellorStorage.TellorStorageStruct"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3051,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "1572:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3053,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "1592:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3055,
                  "name": "_minerIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "1612:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1523:109:11"
            },
            "returnParameters": {
              "id": 3057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:0:11"
            },
            "scope": 3084,
            "src": "1502:3450:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3085,
        "src": "351:13732:11"
      }
    ],
    "src": "0:14083:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-28T09:59:51.731Z",
  "devdoc": {
    "details": "Contains the methods related to disputes. Tellor.sol references this library for function's logic.",
    "methods": {
      "beginDispute(TellorStorage.TellorStorageStruct storage,uint256,uint256,uint256)": {
        "details": "Helps initialize a dispute by assigning it a disputeId when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the invalidated value information to POS voting",
        "params": {
          "_minerIndex": "the index of the miner that submitted the value being disputed. Since each official value requires 5 miners to submit a value.",
          "_requestId": "being disputed",
          "_timestamp": "being disputed"
        }
      }
    },
    "title": "Tellor Dispute"
  },
  "userdoc": {
    "methods": {},
    "notice": "***********************************TEST LIBRARY***************************************"
  }
}